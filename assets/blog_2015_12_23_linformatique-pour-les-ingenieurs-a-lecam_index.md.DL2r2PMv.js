import{_ as t,c as i,a1 as r,o as n}from"./chunks/framework.xETXYpcG.js";const o="/images/blog/Python2BA-first-course.jpg",s="/images/blog/pythia-logo-full.png",a="/images/blog/book-apprendre-python.png",l="/images/blog/python-mini-projet-architecture.png",u="/images/blog/python-mini-projet-Broodcoorens-Lemenu-2015.png",c="/images/blog/python-mini-projet-Chagnot-Szelagowski-2015.png",d="/images/blog/python-mini-projet-Selleslagh-et-al-2015.png",p="/images/blog/python-mini-projet-Boucquey-DeCat-2015.png",m="/images/blog/python-mini-projet-Godart-Lekens-2015.png",g="/images/blog/python-mini-projet-Hammoud-Troch-2015.png",h="/images/blog/stib-python.jpg",j=JSON.parse(`{"title":"L'informatique pour les ingénieurs à l'ECAM","description":"","frontmatter":{"date":"2015-12-23 15:21:51 +0200","categories":"enseignement, pédagogie, informatique","language":"fr"},"headers":[],"relativePath":"blog/2015/12/23/linformatique-pour-les-ingenieurs-a-lecam/index.md","filePath":"blog/2015/12/23/linformatique-pour-les-ingenieurs-a-lecam/index.md"}`),b={name:"blog/2015/12/23/linformatique-pour-les-ingenieurs-a-lecam/index.md"};function f(v,e,q,y,x,_){return n(),i("div",null,e[0]||(e[0]=[r('<h1 id="l-informatique-pour-les-ingenieurs-a-l-ecam" tabindex="-1">L&#39;informatique pour les ingénieurs à l&#39;ECAM <a class="header-anchor" href="#l-informatique-pour-les-ingenieurs-a-l-ecam" aria-label="Permalink to &quot;L&#39;informatique pour les ingénieurs à l&#39;ECAM&quot;">​</a></h1><p>Les étudiants à l&#39;ECAM ont tous un <strong>cours général d&#39;informatique</strong> en première et en deuxième année de bachelier. Lors de l&#39;élaboration des nouveaux programmes de cours, une réflexion a été mise en place pour constituer le contenu de ces cours. En effet, ces cours étant suivis par tous les étudiants, peu importe l&#39;orientation qu&#39;ils prendront en master (automatisation, construction, électronique, géomètre, informatique ou électromécanique), ils devront tous les suivre. Il s&#39;agissait donc de définir un contenu qui soit <strong>utile dans la formation de tout ingénieur</strong>. Cet article décrit la mise en place de ces cours, opérée avec mon collègue Quentin Lurkin, qui ont été dispensés <strong>pour la première fois</strong> cette année académique.</p><figure><img src="'+o+'" width="800" height="450" alt="Premier cours de Python en BAC 2"><figcaption>Les étudiants de deuxième année de bachelier sont prêts à suivre leur premier cours de Python de l&#39;année.</figcaption></figure><h2 id="contenu-des-cours" tabindex="-1">Contenu des cours <a class="header-anchor" href="#contenu-des-cours" aria-label="Permalink to &quot;Contenu des cours&quot;">​</a></h2><p>Étant donné que tous les étudiants seront amenés à programmer, et ce peu importe l&#39;orientation qu&#39;ils choisiront, notre choix s&#39;est porté sur la <strong>programmation</strong> plutôt que de faire des cours sur des concepts liés à l&#39;informatique, voire sur son histoire.</p><p>La première année (<em>304 étudiants</em>) introduit à la programmation en Python et a pour objectif final que les étudiants comprennent <strong>la programmation procédurale</strong>. Au terme du cours, ils doivent entre autre être capables de comprendre et d&#39;utiliser les concepts suivants : variable et type de donnée, instruction conditionnelle, instruction répétitive, fonction, récursion, chaine de caractères, listes, itérateur et algorithmes. Les étudiants ont <strong>7,5h</strong> de cours magistraux et <strong>7,5h</strong> d&#39;apprentissage en e-learning via la plateforme Pythia [1] qui leur permet de faire des exercices en ligne, avec correction automatique.</p><figure><img src="'+s+'" width="300" height="125" alt="Logo Pythia"></figure><p>La deuxième année (<em>164 étudiants</em>) va plus loin dans l&#39;apprentissage de la programmation en Python et introduit à plusieurs <strong>concepts informatiques</strong>, avec comme idée de faire comprendre aux étudiants des éléments informatiques avec lesquels ils interagissent tous les jours. Point de vue programmation, les étudiants découvrent :</p><ul><li>des structures de données avancées (ensemble, tuple et dictionnaire ;</li><li>les bases de la programmation orientée objet (objet, classe, encapsulation) ;</li><li>les interfaces graphiques et la programmation évènementielle ;</li><li>la gestion d&#39;erreurs et le mécanisme d&#39;exception ;</li><li>la lecture et l&#39;écriture de fichiers textes et binaires ;</li><li>la programmation web (HTML, CSS, JavaScript) ;</li><li>le fonctionnement d&#39;Internet et du Web ;</li><li>l&#39;utilisation de la librairie standard Python ;</li><li>et la qualité de code et les conventions de codage.</li></ul><p>Concernant les concepts informatiques, les étudiants sont sensibilisés aux notions de : base de données (document JSON, structure et interrogation d&#39;une DB), design d&#39;interface graphique (layout, gestion d&#39;évènements), stockage et fichier (texte et binaire, stockage et (dé)sérialisation), fonctionnement d&#39;Internet (modem, routeur, réseau, WiFi, cloud, internet des objets...), audit de code (qualité et convention de codage). Les étudiants ont <strong>15h</strong> de cours magistraux et <strong>28h</strong> de laboratoire où ils peuvent pratiquer la programmation à l&#39;aide de nombreux exercices.</p><p><strong>Les syllabus</strong> des deux cours d&#39;informatique se trouvent en ligne à l&#39;adresse suivante : <a href="http://www.ukonline.be/cours/python/apprendre-python" target="_blank" rel="noreferrer">http://www.ukonline.be/cours/python/apprendre-python</a> (en cours de finalisation). De plus, toutes <strong>les ressources</strong> utilisées dans le cadre des deux cours sont disponibles sur la page suivante : <a href="http://sebastien.combefis.be/fr/teaching/ecam/python" target="_blank" rel="noreferrer">http://sebastien.combefis.be/fr/teaching/ecam/python</a>.</p><figure><img src="'+a+'" width="150" height="213" alt="Livre apprendre Python"></figure><p>Le but de ces deux cours est donc de proposer aux étudiants une vue globale de plusieurs aspects de l&#39;informatique, tout en leur fournissant une solide <strong>formation de base en programmation</strong>.</p><h2 id="mini-projet-en-2ba" tabindex="-1">Mini-projet en 2BA <a class="header-anchor" href="#mini-projet-en-2ba" aria-label="Permalink to &quot;Mini-projet en 2BA&quot;">​</a></h2><p>En plus des cours et laboratoires, les étudiants en deuxième année doivent travailler, en binômes, sur un <strong>mini-projet</strong> qui consiste à développer un <strong>site web</strong>, en codant le côté client, le côté serveur et la base de données, en Python. Les étudiants doivent également programmer une <strong>interface graphique</strong> d&#39;administration qui communique avec le serveur. Les étudiants étaient complètement libres quant au site web à développer; ceci afin de stimuler leur créativité.</p><figure><img src="'+l+'" width="300" height="146" alt="Architecture du mini-projet Python"></figure><p>Comme vous le constatez avec les quelques exemples repris ci-dessous, les thèmes choisis sont très variés ! Ce mini-projet a permis de motiver les étudiants, et les a aidé à appliquer directement tous les concepts enseignés sur un projet réel et personnel.</p><div class="slideshow"><div><img src="'+u+'" width="800" height="489" alt="Jeux a boire"><br><b>Jeux a boire</b><br><small>(par Maxime Broodcoorens et Valentin Lemenu)</small></div><div><img src="'+c+'" width="800" height="489" alt="Gestion d&#39;horaire"><br><b>Gestion d&#39;horaire </b><br><small>(par William Chagnot et Lucas Szelagowski)</small></div><div><img src="'+d+'" width="800" height="489" alt="Écran d&#39;information"><br><b>Écran d&#39;information</b><br><small>(par Anne De Ceuleneer, Tom Selleslagh, Clement Vandekerchhove, Guillaume Van den Hove d&#39;Ertsenryck, Alexis Van Haelen et Benoit Wery)</small></div><div><img src="'+p+'" width="800" height="489" alt="Liste de courses"><br><b>Liste de courses </b><br><small>(par Francois De Cat et Antoine Boucquey)</small></div><div><img src="'+m+'" width="800" height="489" alt="Scores de foot"><br><b>Scores de foot</b><br><small>(par Nicolas Godart et Amaury Lekens)</small></div><div><img src="'+g+'" width="800" height="299" alt="Calculateur de vis"><br><b>Calculateur de vis</b><br><small>(par Mariam Hammoud et Gabriel Troch)</small></div></div><h2 id="pourquoi-python" tabindex="-1">Pourquoi Python ? <a class="header-anchor" href="#pourquoi-python" aria-label="Permalink to &quot;Pourquoi Python ?&quot;">​</a></h2><p>Et pourquoi avoir choisi <strong>Python</strong> ? Ce n&#39;est malheureusement pas le sujet de cet article; mais voici néanmoins deux réponses rapides pour vous rassasier en attendant un prochain article sur ce sujet : car il figure parmi les langages les plus utilisés en 2015 [2] et car il est partout, même à la STIB, comme en témoigne l&#39;image suivante !</p><figure><img src="'+h+'" width="250" height="333" alt="Publicité STIB avec un Python"></figure><p>Si vous ne connaissez pas encore le langage Python, je vous invite à le découvrir, le tester et pourquoi pas l&#39;adopter ! Il s&#39;agit d&#39;un langage simple et rapide à apprendre, très riche, et qui vous permettra de rapidement réaliser de nombreux types de programmes.</p><h2 id="references" tabindex="-1">Références <a class="header-anchor" href="#references" aria-label="Permalink to &quot;Références&quot;">​</a></h2><p>[1] <a href="http://www.pythia-project.org/" target="_blank" rel="noreferrer">La plateforme Pythia</a>.<br> [2] [The 2015 Top Ten Programming Languages](<a href="http://spectrum.ieee.org/computing/" target="_blank" rel="noreferrer">http://spectrum.ieee.org/computing/</a> software/the-2015-top-ten-programming-languages), Stephen Cass, 20 juillet 2015.</p>',24)]))}const w=t(b,[["render",f]]);export{j as __pageData,w as default};
